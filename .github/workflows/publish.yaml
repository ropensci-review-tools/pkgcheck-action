name: Build & Push Docker

on:
  workflow_dispatch:

  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    paths:
      - "Dockerfile"
      - "**.R"

  # Run tests for any PRs.
  pull_request:
    branches:
      - main

# This will cancel running jobs once a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  update-readme:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: "${{ github.token }}"
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::sessioninfo
            github::ropensci-review-tools/pkgcheck@main
            github::assignUser/octolog
            any::here
      - name: Update README.md
        run: source("R/insert-inputs.R")
        shell: Rscript {0}
      - name: Commit changes
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          git config user.name  "Github Actions"
          git config user.email "github-actions@github.com"
          git commit README.md -m 'Update README.md' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

  push:
    needs: update-readme
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/ropensci-review-tools/pkgcheck-action
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ endsWith(github.ref, 'main') }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        env:
          GITHUB_PAT: ${{ github.token }}
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

